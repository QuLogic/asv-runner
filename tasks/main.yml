---
- name: Setup Miniconda
  include_role:
    name: uchida.miniconda
    vars:
      name: asv
      channels:
        - conda-forge
      dependencies:
        - python=3.5
        - asv
        - pip

- name: Install system packages
  become: yes
  apt:
    name:
      - git
      - python-pip
    state: present
    update_cache: true
  tags:
    - packages

- name: Install system python packages
  become: yes
  pip:
    name:
      - boto
      - python-dateutil
      - boto3
  tags:
    - aws
    - s3

- name: Copy machine info
  template:
    src: asv-machine.json.j2
    dest: /home/{{ ansible_user }}/.asv-machine.json

- name: Copy master runner
  template:
    src: benchmark_runner.sh
    dest: /usr/local/bin/benchmark_runner
    mode: 0755
  become: yes
  tags:
    - runners

- name: Ensure runners directory
  file:
    path: /home/{{ ansible_user }}/runners
    state: directory
  tags:
    - runners

- name: Copy runner script
  template:
    src: run.sh.j2
    dest: /home/{{ ansible_user }}/runners/{{ run_name }}.sh
    mode: 0755
  tags:
    - runners

- name: Add cron job
  cron:
    name: "Run benchmarks"
    minute: "0"
    hour: "0"
    job: "/usr/local/bin/benchmark_runner"
  tags:
    - runners

- name: Download repository
  git:
    repo: "{{ repo }}"
    dest: "{{ workdir }}"

- name: Run benchmarks
  command: "{{ miniconda_dir }}/envs/asv/bin/asv run --machine={{ machine.name }}"
  args:
    chdir: "{{ workdir }}/{{ item }}"
  with_items:
    "{{ benchmark_roots }}"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ miniconda_dir }}/bin"
  tags:
    - benchmarks

- name: Publish Benchmarks
  command: "{{ miniconda_dir }}/envs/asv/bin/asv gh-pages"
  when: "{{ publish }}"
